
@{
	ViewData["Title"] = "PhoneVerification";
}

<!DOCTYPE html>
<html lang="en">

<head>

	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
	<meta name="description" content="">
	<meta name="author" content="">

	<title>Laundry Go - Main Page</title>

	<!-- Bootstrap core CSS -->
	<link href="vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">

	<!-- Custom fonts for this template -->
	<link rel="stylesheet" href="vendor/font-awesome/css/font-awesome.min.css">
	<link rel="stylesheet" href="vendor/simple-line-icons/css/simple-line-icons.css">
	<link href="https://fonts.googleapis.com/css?family=Lato" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css?family=Catamaran:100,200,300,400,500,600,700,800,900" rel="stylesheet">
	<link href="https://fonts.googleapis.com/css?family=Muli" rel="stylesheet">

	<!-- Plugin CSS -->
	<link rel="stylesheet" href="device-mockups/device-mockups.min.css">

	<!-- Custom styles for this template -->
	<link href="css/new-age.css" rel="stylesheet">

	<link href="vendor/bootstrap-social/bootstrap-social.css" rel="stylesheet">


</head>

<body id="page-top">

	<!-- Navigation -->
	<nav class="navbar navbar-expand-lg navbar-light fixed-top" id="mainNav">
		<div class="container">
			<a class="navbar-brand js-scroll-trigger" href="#page-top">Laundry Go</a>
			<button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
				Menu
				<i class="fa fa-bars"></i>
			</button>
			@*<div class="collapse navbar-collapse" id="navbarResponsive">
				<ul class="navbar-nav ml-auto">
					<li class="nav-item">
						<a class="nav-link js-scroll-trigger" href="#download">Download</a>
					</li>
					<li class="nav-item">
						<a class="nav-link js-scroll-trigger" href="#features">Features</a>
					</li>
					<li class="nav-item">
						<a class="nav-link js-scroll-trigger" href="#contact">Contact</a>
					</li>
				</ul>
			</div>*@
		</div>
	</nav>

	<header class="masthead">
		<div class="container h-100">
			<div class="row h-100">
				<div class="col-lg-2"></div>
				<div class="col-lg-8">
					<div class="card" style="margin-top:100px">
						<h5 class="card-header text-center">Mobile Authentication</h5>
						<div class="card-body text-center">
							<form method="POST">
								<div class="row">
									<div class="col-lg-1">

									</div>
									<div class="col-lg-10">
										<div class="form-group">
											<input type="text" class="form-control" name="user_phone" placeholder="Phone Number">
										</div>
										<input type="submit" class="btn btn-primary js-scroll-trigger" value="Submit">
									</div>
									<div class="col-lg-1">

									</div>
								</div>
							</form>
						</div>
					</div>
				</div>
				<div class="col-lg-2"></div>
			</div>
		</div>
	
	</header>









	<footer>
		<div class="container">
			<p>&copy; Laundry Go 2018. All Rights Reserved.</p>
			<ul class="list-inline">
				<li class="list-inline-item">
					<a href="#">Privacy</a>
				</li>
				<li class="list-inline-item">
					<a href="#">Terms</a>
				</li>
				<li class="list-inline-item">
					<a href="#">FAQ</a>
				</li>
			</ul>
		</div>
	</footer>

	<script>
//   function myMap() {
//   var mapCanvas = document.getElementById("map");
//   var myCenter=new google.maps.LatLng(51.508742,-0.120850);
//   var mapOptions = {center: myCenter, zoom: 5};
//   var map = new google.maps.Map(mapCanvas, mapOptions);
//   google.maps.event.addListener(map, 'click', function(event) {
//     placeMarker(map, event.latLng);
//   });
//   }

// function placeMarker(map, location) {
//   var marker = new google.maps.Marker({
//     position: location,
//     map: map
//   });
//   var infowindow = new google.maps.InfoWindow({
//     content: 'Latitude: ' + location.lat() + '<br>Longitude: ' + location.lng()
//   });
//   infowindow.open(map,marker);
// }

// This example adds a search box to a map, using the Google Place Autocomplete
      // feature. People can enter geographical searches. The search box will return a
      // pick list containing a mix of places and predicted search terms.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      // function initAutocomplete() {
      //   var map = new google.maps.Map(document.getElementById('map'), {
      //     center: {lat: -33.8688, lng: 151.2195},
      //     zoom: 13,
      //     mapTypeId: 'roadmap'
      //   });

      //   // Create the search box and link it to the UI element.
      //   var input = document.getElementById('pac-input');
      //   var searchBox = new google.maps.places.SearchBox(input);
      //   map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

      //   // Bias the SearchBox results towards current map's viewport.
      //   map.addListener('bounds_changed', function() {
      //     searchBox.setBounds(map.getBounds());
      //   });

      //   var markers = [];
      //   // Listen for the event fired when the user selects a prediction and retrieve
      //   // more details for that place.
      //   searchBox.addListener('places_changed', function() {
      //     var places = searchBox.getPlaces();

      //     if (places.length == 0) {
      //       return;
      //     }

      //     // Clear out the old markers.
      //     markers.forEach(function(marker) {
      //       marker.setMap(null);
      //     });
      //     markers = [];

      //     // For each place, get the icon, name and location.
      //     var bounds = new google.maps.LatLngBounds();
      //     places.forEach(function(place) {
      //       if (!place.geometry) {
      //         console.log("Returned place contains no geometry");
      //         return;
      //       }
      //       var icon = {
      //         url: place.icon,
      //         size: new google.maps.Size(71, 71),
      //         origin: new google.maps.Point(0, 0),
      //         anchor: new google.maps.Point(17, 34),
      //         scaledSize: new google.maps.Size(25, 25)
      //       };

      //       // Create a marker for each place.
      //       markers.push(new google.maps.Marker({
      //         map: map,
      //         icon: icon,
      //         title: place.name,
      //         position: place.geometry.location
      //       }));

      //       if (place.geometry.viewport) {
      //         // Only geocodes have viewport.
      //         bounds.union(place.geometry.viewport);
      //       } else {
      //         bounds.extend(place.geometry.location);
      //       }
      //     });
      //     map.fitBounds(bounds);
      //   });
      // }
	</script>

	<!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDkY_x9vsdgETaBOAlvw8eJANTiuWGy7Xs&callback=initAutocomplete&libraries=places"></script> -->
	<!-- Bootstrap core JavaScript -->
	<script src="vendor/jquery/jquery.min.js"></script>
	<script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

	<!-- Plugin JavaScript -->
	<script src="vendor/jquery-easing/jquery.easing.min.js"></script>

	<!-- Custom scripts for this template -->
	<script src="js/new-age.min.js"></script>

</body>

</html>

